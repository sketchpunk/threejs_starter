////////////////////////////////////////////////////////////////////////

vec4 blend_add( vec4 f, vec4 b ){
    vec4 result = vec4( f + b );
    result.a = f.a + b.a * (1.0 - f.a);
    return result;
}

// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFunc
vec4 OneMinusSrcColor( vec4 src, vec4 dst ){
    return src * ( 1.0 - src ) + dst * ( 1.0 - src );
}

vec4 OneMinusDstColor( vec4 src, vec4 dst ){
    return src * ( 1.0 - dst ) + dst * ( 1.0 - dst );
}

vec4 OneMinusSrcAlpha( vec4 src, vec4 dst ){
    return src * ( 1.0 - src.a ) + dst * ( 1.0 - src.a );
}

vec4 SrcAlpha_OneMinusSrcAlpha( vec4 src, vec4 dst ){
    return src * src.a + dst * ( 1.0 - src.a );
}

vec4 SrcAlpha_OneMinusDstAlpha( vec4 src, vec4 dst ){
    return src * src.a + dst * ( 1.0 - dst.a );
}

vec4 SrcAlpha_DstAlpha( vec4 src, vec4 dst ){
    return src * src.a + dst * dst.a;
}

vec4 OneMinusDstAlpha( vec4 src, vec4 dst ){
    return src * ( 1.0 - dst.a ) + dst * ( 1.0 - dst.a );
}

vec4 SrcAlphaSaturate( vec4 src, vec4 dst ){
    float a = min( src.a, 1.0 - dst.a );
    return src * a + dst * a;
}

// https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate
// blendFuncSeparate( SRC_ALPHA, ONE_MINUS_SRC_ALPHA, gl.ZERO, gl.ONE );
vec4 SrcAlpha_OneMinusDstAlpha_Sep( vec4 src, vec4 dst ){
    return src * ( 1.0 - src.a ) + dst * ( 1.0 - dst.a );
    return vec4(
        src.rgb * src.a + dst.rgb * ( 1.0 - src.a ),
        dst.a //src.a * 0.0 + dst * 1.0
    );
}

vec4 DstBlend( vec4 src, vec4 dst ){
    return src * ( 1.0 - dst.a ) + dst * dst.a;
    return vec4(
        src.rgb * src.a + dst.rgb * ( 1.0 - src.a ),
        dst.a //src.a * 0.0 + dst * 1.0
    );
}